{"version":3,"sources":["assets/scripts/main.js"],"names":["options","threshold","callback","entries","forEach","entry","isIntersecting","target","parentElement","classList","contains","play","pause","observer","IntersectionObserver","bgImages","document","querySelectorAll","bgImage","style","backgroundImage","dataset","src","videos","video","observe"],"mappings":";AAAA,IAAMA,EAAU,CACdC,UAAW,CAAC,EAAG,IAGXC,EAAW,SAAAC,GACfA,EAAQC,QAAQ,SAAAC,GACVA,EAAMC,gBAAkBD,EAAME,OAAOC,cAAcC,UAAUC,SAAS,WACxEL,EAAME,OAAOI,OAEbN,EAAME,OAAOK,WAKbC,EAAW,IAAIC,qBAAqBZ,EAAUF,GAE9Ce,EAAWC,SAASC,iBAAiB,8BAC3CF,EAASX,QAAQ,SAAAc,GACfA,OAAAA,EAAQC,MAAMC,gBAA0BF,QAAAA,OAAAA,EAAQG,QAAQC,IADlC,QAKxB,IAAMC,EAASP,SAASC,iBAAiB,SAEzCM,EAAOnB,QAAQ,SAAAoB,GAASX,OAAAA,EAASY,QAAQD","file":"main.7be1454a.js","sourceRoot":"..","sourcesContent":["const options = {\n  threshold: [0, 1.0],\n};\n\nconst callback = entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting && entry.target.parentElement.classList.contains('current')) {\n      entry.target.play();\n    } else {\n      entry.target.pause();\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(callback, options);\n\nconst bgImages = document.querySelectorAll('article.meme,article.image');\nbgImages.forEach(bgImage =>\n  bgImage.style.backgroundImage = `url('${bgImage.dataset.src}')`\n);\n\n// get a list of all videos on the page\nconst videos = document.querySelectorAll('video');\n// Observe each of those elements\nvideos.forEach(video => observer.observe(video));\n"]}